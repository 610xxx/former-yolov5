# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 80  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32
#SE注意力机制适用于通道数较多的场景既目标类似货架商品，CA注意力机制则适用于需要考虑空间维度上的注意力的场景。但在计算开销和捕捉长距离依赖关系等方面存在一些限制。
#CBAM适用于需要对特征图的空间和通道维度进行有效整合的场景，可以提高模型的泛化能力和性能。
# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3CBAM, [128]],      #替换cs为指定注意力C3CBAM--轻量级--15GFLOPS
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 6, C3CBAM, [256]],       #//替换c3为指定C3CBAM
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3CBAM, [512]],    #//替换c3为指定C3CBAM
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 3, C3CBAM, [1024]],      #//替换c3为指定C3CBAM
   [-1, 1, CBAM, [1024]], #添加CBAM注意力
   [-1, 1, SPPF, [1024, 5]],  # 9
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 15], 1, Concat, [1]],  # cat head P4  //添加完注意力机制需要增加层数[-1, 14]->[-1, 15]
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 11], 1, Concat, [1]],  # cat head P5    /增加层数[-1, 10]->[-1, 11]
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)

   [[18, 21, 24], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)   //增加层数+1[17, 20, 23]->[18, 21, 24]
  ]



#*********************************************************************************************************************************************************************************************
# nc: 80  # number of classes
# depth_multiple: 1.0  # model depth multiple
# width_multiple: 1.0  # layer channel multiple
 
# # anchors
# anchors:
#   - [5,6, 8,14, 15,11]  #4
#   - [10,13, 16,30, 33,23]  # P3/8
#   - [30,61, 62,45, 59,119]  # P4/16
#   - [116,90, 156,198, 373,326]  # P5/32
 
# # YOLOv5 backbone
# backbone:
#   # [from, number, module, args]
#   [[-1, 1, Focus, [64, 3]],  # 0-P1/2
#    [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
#    [-1, 3, BottleneckCSP, [128]],   #160*160
#    [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
#    [-1, 9, BottleneckCSP, [256]],  #80*80
#    [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
#    [-1, 9, BottleneckCSP, [512]], #40*40
#    [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
#    [-1, 1, SPP, [1024, [5, 9, 13]]],
#    [-1, 3, BottleneckCSP, [1024, False]],  # 9   20*20
#   ]
 
# # YOLOv5 head  小目标网络层结构*******************************************
# head:
#   [[-1, 1, Conv, [512, 1, 1]],  #20*20
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']], #40*40
#    [[-1, 6], 1, Concat, [1]],  # cat backbone P4  40*40
#    [-1, 3, BottleneckCSP, [512, False]],  # 13     40*40
 
#    [-1, 1, Conv, [512, 1, 1]], #40*40
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']],
#    [[-1, 4], 1, Concat, [1]],  # cat backbone P3   80*80
#    [-1, 3, BottleneckCSP, [512, False]],  # 17 (P3/8-small)  80*80
 
#    [-1, 1, Conv, [256, 1, 1]], #18  80*80
#    [-1, 1, nn.Upsample, [None, 2, 'nearest']], #19  160*160   
#    [[-1, 2], 1, Concat, [1]], #20 cat backbone p2  160*160     加一  [-1, 2]-》[-1, 3]
#    [-1, 3, BottleneckCSP, [256, False]], #21 160*160
 
#    [-1, 1, Conv, [256, 3, 2]],  #22   80*80
#    [[-1, 18], 1, Concat, [1]], #23 80*80       加一[-1, 18]-》[-1, 19]
#    [-1, 3, BottleneckCSP, [256, False]], #24 80*80
 
#    [-1, 1, Conv, [256, 3, 2]], #25  40*40
#    [[-1, 14], 1, Concat, [1]],  # 26  cat head P4  40*40         修改层数，se[-1, 14]-》[-1, 15]
#    [-1, 3, BottleneckCSP, [512, False]],  # 27 (P4/16-medium) 40*40
 
#    [-1, 1, Conv, [512, 3, 2]],  #28  20*20
#    [[-1, 10], 1, Concat, [1]],  #29 cat head P5  #20*20             修改层数，se网路层[-1, 10]-》[-1, 11]
#    [-1, 3, BottleneckCSP, [1024, False]],  # 30 (P5/32-large)  20*20
 
#    [[21, 24, 27, 30], 1, Detect, [nc, anchors]],  # Detect(p2, P3, P4, P5)   增加注意力机制需要层数+1 例如;[21, 24, 27, 30]->[22, 25, 28, 31],删减网络恢复
#   ]